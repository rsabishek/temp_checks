type providerConfig struct {
	// ... other fields
	BearerToken types.String `tfsdk:"bearer_token"`
}

func (p *provider) GetSchema(ctx context.Context) (tfsdk.Schema, diag.Diagnostics) {
	return tfsdk.Schema{
		Attributes: map[string]tfsdk.Attribute{
			// ... existing attributes
			"bearer_token": {
				Type:        types.StringType,
				Required:    true,
				Description: "The bearer token used for authentication.",
			},
		},
	}, nil
}

func (p *provider) Configure(ctx context.Context, req tfsdk.ConfigureProviderRequest, resp *tfsdk.ConfigureProviderResponse) {
	config := providerConfig{}
	if err := req.Config.Get(ctx, &config); err != nil {
		resp.Diagnostics.AddError(
			"Error parsing configuration",
			"An unexpected error was encountered while parsing the provider configuration: "+err.Error(),
		)
		return
	}

	// Initialize client with the bearer token
	client := hashicups.NewClient(config.BearerToken.Value)
	p.client = client
}
